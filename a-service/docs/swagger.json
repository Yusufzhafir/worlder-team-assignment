{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "WORLDER TEAM ASSIGNMENT",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/api/v1",
    "paths": {
        "/config": {
            "post": {
                "description": "Update sensor configuration including value, type, IDs, and server address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Configure sensor parameters",
                "parameters": [
                    {
                        "description": "Generator configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.GeneratorConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "succesfully updated config",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "error=true, message explains",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/frequency": {
            "post": {
                "description": "Set the frequency of data generation in requests per second",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Set generation frequency",
                "parameters": [
                    {
                        "description": "frequency request timeout duration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generator.frequencyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frequency updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/generator.frequencyRequest"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid frequency value",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/spam": {
            "post": {
                "description": "Send multiple concurrent requests to the gRPC service for load testing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Execute spam requests",
                "parameters": [
                    {
                        "description": "Spam request configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/usecase.SpamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Spam requests completed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/start": {
            "post": {
                "description": "Start continuous data generation to the gRPC service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Start data generation",
                "responses": {
                    "200": {
                        "description": "Data generation started successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Generator already running",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Retrieve current statistics including total sent and failed requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Get generation statistics",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stop": {
            "post": {
                "description": "Stop continuous data generation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Stop data generation",
                "responses": {
                    "200": {
                        "description": "Data generation stopped successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Generator already stopped",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Envelope"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Empty"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "generator.frequencyRequest": {
            "type": "object",
            "properties": {
                "timeout": {
                    "type": "string",
                    "example": "2s"
                }
            }
        },
        "model.Empty": {
            "type": "object"
        },
        "model.Envelope": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "boolean",
                    "example": false
                },
                "message": {
                    "type": "string",
                    "example": "ok"
                }
            }
        },
        "usecase.GeneratorConfig": {
            "type": "object",
            "properties": {
                "id1": {
                    "type": "string"
                },
                "id2": {
                    "type": "integer"
                },
                "server_addr": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "usecase.SpamRequest": {
            "type": "object",
            "properties": {
                "concurrency": {
                    "type": "integer"
                },
                "id1": {
                    "type": "string"
                },
                "id2": {
                    "type": "integer"
                },
                "timeout": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": "Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "write": "Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "write": "Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": "Grants read and write access to administrative information",
                "read": "Grants read access",
                "write": "Grants write access"
            }
        }
    }
}